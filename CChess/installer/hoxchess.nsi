; Script generated by the HM NIS Edit Script Wizard.
;
; Purpose: Create an Windows Installer for HOXChess.
; ---------------------------------------------------

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "HOXChess"
!define PRODUCT_VERSION "0.5.1.0"
!define PRODUCT_PUBLISHER "PlayXiangqi.com"
!define PRODUCT_WEB_SITE "http://www.playxiangqi.com"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\hox_Client.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

; MUI 1.67 compatible ------
!include "MUI.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; This is need to get around the "Shortcuts removal fails on Windows Vista"
; See: http://nsis.sourceforge.net/Shortcuts_removal_fails_on_Windows_Vista
; for more details.
RequestExecutionLevel admin

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "COPYING.txt"
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
; NOTE: NOT RUNNING directly since it needs to be run within a specific folder.
;       !define MUI_FINISHPAGE_RUN "$INSTDIR\bin\hox_Client.exe"
!define MUI_FINISHPAGE_RUN
;!define MUI_FINISHPAGE_RUN_NOTCHECKED
!define MUI_FINISHPAGE_RUN_TEXT "Launch ${PRODUCT_NAME}"
!define MUI_FINISHPAGE_RUN_FUNCTION "LaunchLink"
!define MUI_FINISHPAGE_SHOWREADME "$INSTDIR\README.txt"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "${PRODUCT_NAME}-${PRODUCT_VERSION}-Setup.exe"
InstallDir "$PROGRAMFILES\${PRODUCT_NAME}"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

; Microsoft Visual C++ 2008 Redistributable Package (x86)
Section "VCDist_x86" SEC01
  SetOutPath $TEMP
  File "vcredist_x86.exe"
  ExecWait '"$TEMP\vcredist_x86.exe" /q:a'
SectionEnd

Section "MainSection" SEC02
  SetOutPath "$INSTDIR\bin"
  SetOverwrite ifnewer
  File "bin\hox_Client.exe"
  CreateDirectory "$SMPROGRAMS\${PRODUCT_NAME}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\${PRODUCT_NAME}.lnk" "$INSTDIR\bin\hox_Client.exe"
  CreateShortCut "$DESKTOP\${PRODUCT_NAME}.lnk" "$INSTDIR\bin\hox_Client.exe"

  SetOutPath "$INSTDIR\resource\pieces\1"
  SetOverwrite try
  File "resource\pieces\1\badvisor.png"
  File "resource\pieces\1\bcannon.png"
  File "resource\pieces\1\bchariot.png"
  File "resource\pieces\1\belephant.png"
  File "resource\pieces\1\bhorse.png"
  File "resource\pieces\1\bking.png"
  File "resource\pieces\1\bpawn.png"
  File "resource\pieces\1\radvisor.png"
  File "resource\pieces\1\rcannon.png"
  File "resource\pieces\1\rchariot.png"
  File "resource\pieces\1\relephant.png"
  File "resource\pieces\1\rhorse.png"
  File "resource\pieces\1\rking.png"
  File "resource\pieces\1\rpawn.png"
  File "resource\pieces\1\CREDITS.txt"

  SetOutPath "$INSTDIR\resource\images"
  SetOverwrite try
  File "resource\images\up.png"
  File "resource\images\down.png"
  File "resource\images\speaker.png"
  File "resource\images\speaker_mute.png"

  SetOutPath "$INSTDIR\resource\sounds"
  SetOverwrite try
  File "resource\sounds\move.wav"

  SetOutPath "$INSTDIR\xqwlight"
  SetOverwrite try
  File "xqwlight\BOOK.DAT"

  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  File "README.txt"
SectionEnd

Section -AdditionalIcons
  SetOutPath $INSTDIR
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\bin\hox_Client.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\bin\hox_Client.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd

Function LaunchLink
  ExecShell "" "$SMPROGRAMS\${PRODUCT_NAME}\HOXChess.lnk"
FunctionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Delete "$INSTDIR\${PRODUCT_NAME}.url"
  Delete "$INSTDIR\uninst.exe"
  Delete "$TEMP\vcredist_x86.exe"
  Delete "$INSTDIR\README.txt"

  Delete "$INSTDIR\bin\hox_Client.exe"

  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Website.lnk"
  Delete "$DESKTOP\HOXChess.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\HOXChess.lnk"

  RMDir "$SMPROGRAMS\${PRODUCT_NAME}"
  RMDir /r "$INSTDIR\resource\pieces\1"
  RMDir "$INSTDIR\resource\pieces"
  RMDir /r "$INSTDIR\resource\images"
  RMDir /r "$INSTDIR\resource\sounds"
  RMDir "$INSTDIR\resource"
  RMDir /r "$INSTDIR\xqwlight"
  RMDir "$INSTDIR\xqwlight"
  RMDir "$INSTDIR\bin"
  RMDir "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd

; ----------------------------
; Detect whether your software is already installed
; and, if so, allows the user to uninstall it first.
;
; REFERENCE:
;  + http://nsis.sourceforge.net/Auto-uninstall_old_before_installing_new
;  + http://www.sraoss.jp/sylpheed/sylpheed/win32/nsis/sylpheed-2.2.3.nsi
; ----------------------------
Function .onInit
  ReadRegStr $R0 HKLM ${PRODUCT_UNINST_KEY} "UninstallString"
  StrCmp $R0 "" done

  ; Build my own INSTDIR from the Uninstaller path
  ; since the default of INSTDIR = "../bin/.."
  StrLen $0 "uninst.exe"
  IntOp $0 $0 + 1
  IntOp $0 0 - $0
  StrCpy $1 $R0 $0
  ;MessageBox MB_OK "[$0] . Original = [$INSTDIR] My = [$R0] -> [$1]"
  StrCpy $INSTDIR $1    ; NOTE: Changed the Install Path
  
  MessageBox MB_OKCANCEL|MB_ICONEXCLAMATION \
             "${PRODUCT_NAME} is already installed at $INSTDIR. $\n$\n \
             Click `OK` to remove the previous version or `Cancel` to cancel this upgrade." \
             IDOK uninst
  Abort

uninst:  ; Run the uninstaller
  ClearErrors

  Exec $R0
  ;ExecWait '$R0 _?=$INSTDIR' ; Do not copy the uninstaller to a temp file
  ;IfErrors no_remove_uninstaller
  ;no_remove_uninstaller:

done:
FunctionEnd

;;;;;;;;;;;;;;;;;;;;; END OF FILE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
